(function(){"use strict";var a={581:function(a,e,n){var t=n(963),s=n(252);function o(a,e){const n=(0,s.up)("router-view");return(0,s.wg)(),(0,s.j4)(n)}var r=n(744);const i={},l=(0,r.Z)(i,[["render",o]]);var c=l,d=n(205);(0,d.z)("/vuety/service-worker.js",{ready(){console.log("App is being served from cache by a service worker.\nFor more details, visit https://goo.gl/AFskqB")},registered(){console.log("Service worker has been registered.")},cached(){console.log("Content has been cached for offline use.")},updatefound(){console.log("New content is downloading.")},updated(){console.log("New content is available; please refresh.")},offline(){console.log("No internet connection found. App is running in offline mode.")},error(a){console.error("Error during service worker registration:",a)}});var p=n(201);const u={class:"container"},b={class:"mt-5"};function v(a,e,n,t,o,r){const i=(0,s.up)("Header");return(0,s.wg)(),(0,s.iD)("div",u,[(0,s._)("header",null,[(0,s.Wm)(i,{msg:"Welcome to Your Vue.js App"})]),(0,s._)("section",b,[((0,s.wg)(),(0,s.j4)((0,s.LL)(o.actualComponent)))])])}const m=a=>((0,s.dD)("data-v-0cf74ac0"),a=a(),(0,s.Cn)(),a),h={class:"header"},f=(0,s.uE)('<div class="header__button mt-5 text-center" data-v-0cf74ac0><a href="https://github.com/Yesma7" target="blank" class="btn btn-light" data-v-0cf74ac0>Mi repositorio <i class="fa-brands fa-github" data-v-0cf74ac0></i></a></div><div class="header__title mt-4" data-v-0cf74ac0><h1 class="vuety text-center" data-v-0cf74ac0>Vuety</h1><p class="text-center fs-2 text-white" data-v-0cf74ac0>By: Yesma7</p></div>',2),g={class:"header__nav"},_={class:"navbar navbar-expand-lg"},$={class:"container-fluid"},w=m((()=>(0,s._)("button",{class:"navbar-toggler",type:"button","data-bs-toggle":"collapse","data-bs-target":"#navbarNav","aria-controls":"navbarNav","aria-expanded":"false","aria-label":"Toggle navigation"},[(0,s._)("span",{class:"navbar-toggler-icon"})],-1))),C={class:"collapse navbar-collapse",id:"navbarNav"},y={class:"navbar-nav"},A={class:"nav-item"},D=m((()=>(0,s._)("i",{class:"fa-solid fa-house-fire"},null,-1))),E={class:"nav-item"},x=m((()=>(0,s._)("i",{class:"fa-brands fa-vuejs"},null,-1))),k={class:"nav-item"},P=m((()=>(0,s._)("i",{class:"fa-brands fa-php"},null,-1))),U={class:"nav-item"},T=m((()=>(0,s._)("i",{class:"fa-brands fa-laravel"},null,-1))),O={class:"nav-item"},S=m((()=>(0,s._)("i",{class:"fa-brands fa-python"},null,-1)));function j(a,e,n,t,o,r){return(0,s.wg)(),(0,s.iD)("div",h,[f,(0,s._)("div",g,[(0,s._)("nav",_,[(0,s._)("div",$,[w,(0,s._)("div",C,[(0,s._)("ul",y,[(0,s._)("li",A,[(0,s._)("a",{onClick:e[0]||(e[0]=a=>t.switchComponent("InitialVue")),class:"nav-link","aria-current":"page",href:"#"},[D,(0,s.Uk)(" Inicio")])]),(0,s._)("li",E,[(0,s._)("a",{onClick:e[1]||(e[1]=a=>t.switchComponent("AboutMe")),class:"nav-link",href:"#"},[x,(0,s.Uk)(" Sobre Vuety")])]),(0,s._)("li",k,[(0,s._)("a",{onClick:e[2]||(e[2]=a=>t.switchComponent("Php")),class:"nav-link",href:"#"},[P,(0,s.Uk)(" Php")])]),(0,s._)("li",U,[(0,s._)("a",{onClick:e[3]||(e[3]=a=>t.switchComponent("Laravel")),class:"nav-link",href:"#"},[T,(0,s.Uk)(" Laravel")])]),(0,s._)("li",O,[(0,s._)("a",{onClick:e[4]||(e[4]=a=>t.switchComponent("Python")),class:"nav-link",href:"#"},[S,(0,s.Uk)(" Python")])])])])])])])])}var L={name:"Header",setup(){const a=(0,s.f3)("emitter"),e=e=>{console.log(e),a.emit("switchComponent",e)};return{switchComponent:e}}};const q=(0,r.Z)(L,[["render",j],["__scopeId","data-v-0cf74ac0"]]);var M=q,R=n.p+"img/AboutMe.e69a6867.png";const H={class:"row"},I=(0,s.uE)('<h1 class="title" data-v-574226ce>Hola!</h1><p class="text" data-v-574226ce>Esta es una guía práctica para ti, de Dev Junior para Dev Junior.</p><div class="row" data-v-574226ce><div class="col" data-v-574226ce><div class="card" data-v-574226ce><div class="card-body" data-v-574226ce><h5 class="card-title" data-v-574226ce>Qué encontrarás?</h5><p class="card-text" data-v-574226ce>Guías prácticas de cada uno de los proyectos base para que puedas empezar a construir tus aplicaciones de una forma guiada y rápida y lo mejor, en Español!. La idea es seguir creciendo, donde poco a poco vas a poder consultar entre otras cosas: <br data-v-574226ce><i class="fa-solid fa-square-pen" data-v-574226ce></i> Crud <br data-v-574226ce><i class="fa-solid fa-right-to-bracket" data-v-574226ce></i> Login <br data-v-574226ce><i class="fa-solid fa-paper-plane" data-v-574226ce></i> Envío de Mails <br data-v-574226ce><i class="fa-solid fa-bell" data-v-574226ce></i> Notificaciones</p><p class="card-text" data-v-574226ce>No dudes en realizar tus aportes a cada una de las ideas propuestas, entre todos construimos comunidad para que más desarrolladores que están empezando como yo, encuentren lo mejor en un mismo lugar.</p></div></div></div><div class="col" data-v-574226ce><div class="card" data-v-574226ce><div class="card-body" data-v-574226ce><img class="text-center" src="'+R+'" alt="ImagenInit" data-v-574226ce></div></div></div></div>',3),z=[I];function B(a,e){return(0,s.wg)(),(0,s.iD)("div",H,z)}const N={},V=(0,r.Z)(N,[["render",B],["__scopeId","data-v-574226ce"]]);var F=V;const Q={class:"row"},Z=(0,s.uE)('<h1 class="title" data-v-cfa7137c>Sobre mí</h1><div class="col" data-v-cfa7137c><div class="card" data-v-cfa7137c><div class="card-content ms-5" data-v-cfa7137c><p class="text" data-v-cfa7137c>Soy Vuety, espero poder ayudarte cuando necesites algunas cosillas sobre PHP, Python y Laravel integrado con Vue js. Poco a poco iremos creciendo asi que lo que necesites solo toma y Codifica!</p><p class="text" data-v-cfa7137c>Aquí encontrarás todo lo necesario para que empieces a construir tus aplicaciones Web, explicado paso a paso haciendo que sea fácil para ti además cualquier mejora que tengas, no dudes en hacer tu Pull Request.</p></div></div></div><div class="coffee mt-5" data-v-cfa7137c><h3 class="text" data-v-cfa7137c>Psss! Me invitarias un café?</h3><span data-v-cfa7137c><a target="_blank" href="https://paypal.me/yesma7?country.x=CO&amp;locale.x=es_XC" data-v-cfa7137c><i class="fa-solid fa-mug-hot" data-v-cfa7137c></i></a></span></div>',3),W=[Z];function X(a,e){return(0,s.wg)(),(0,s.iD)("div",Q,W)}const Y={},G=(0,r.Z)(Y,[["render",X],["__scopeId","data-v-cfa7137c"]]);var J=G;const K=a=>((0,s.dD)("data-v-ff922554"),a=a(),(0,s.Cn)(),a),aa={class:"row"},ea=K((()=>(0,s._)("h1",{class:"title ms-5"},"Php",-1))),na={class:"buttons ms-5"},ta=K((()=>(0,s._)("i",{class:"fa-solid fa-pen-ruler me-3"},null,-1))),sa={class:"ms-5 mt-5"};function oa(a,e,n,t,o,r){return(0,s.wg)(),(0,s.iD)("div",aa,[ea,(0,s._)("div",na,[(0,s._)("button",{onClick:e[0]||(e[0]=a=>r.switchSolution("PhpCrud")),class:"btn btn-light"},[ta,(0,s.Uk)(" Crud")])]),(0,s._)("div",sa,[((0,s.wg)(),(0,s.j4)((0,s.LL)(o.solution)))])])}var ra=n.p+"img/LeerTodos.8f4fb811.png",ia=n.p+"img/LeerUno.67cb73ec.png",la=n.p+"img/Crear.65579c75.png",ca=n.p+"img/Actualizar.e84a8b34.png",da=n.p+"img/Eliminar.d1203b69.png";const pa=a=>((0,s.dD)("data-v-76240b2d"),a=a(),(0,s.Cn)(),a),ua={class:"row"},ba=(0,s.uE)('<div class="row" data-v-76240b2d><h2 class="fw-bold title" data-v-76240b2d>Creación API</h2><p class="text" data-v-76240b2d>Empezemos por crear nuestra API RESTful, que será desarrollada con: <br data-v-76240b2d><br data-v-76240b2d><i class="fa-solid fa-microchip" data-v-76240b2d></i> PHP 8 <br data-v-76240b2d><i class="fa-solid fa-microchip" data-v-76240b2d></i> MySQL <br data-v-76240b2d><br data-v-76240b2d> Para las pruebas puedes probar cualquier entorno en el que te sientas cómodo como <a href="https://www.postman.com/downloads/" target="_blank" data-v-76240b2d>Postman</a> o la extensión para VS Code <a href="https://www.thunderclient.com/" target="_blank" data-v-76240b2d>Thunder Client</a>, sin embargo podrás utilizar la que desees. </p></div><div class="row" data-v-76240b2d><h2 class="title" data-v-76240b2d>Api <i class="fa-solid fa-circle-arrow-right" data-v-76240b2d></i> Estructura <br data-v-76240b2d> de Archivos</h2><div class="col" data-v-76240b2d><img src="'+R+'" alt="Img" data-v-76240b2d></div><div class="col" data-v-76240b2d><p class="text" data-v-76240b2d>Hemos creado las carpetas: api, class y config para organizar nuestros archivos de trabajo <br data-v-76240b2d> Podrás correr el proyecto a través de MAMP o WAMP o también puedes hacerlo por Línea de Comandos donde te dejo como realizarlo. </p></div></div>',2),va={class:"row mt-5"},ma=pa((()=>(0,s._)("p",{class:"text text-center"},"Navega a el directorio donde está localizado tu proyecto: Utiliza cd",-1))),ha=pa((()=>(0,s._)("pre",{class:"language-php"},[(0,s.Uk)("                    "),(0,s._)("code",{class:"code"},"\n                        cd php-tu-proyecto\n                    "),(0,s.Uk)("\n                ")],-1))),fa=[ha],ga={class:"row mt-5"},_a=pa((()=>(0,s._)("p",{class:"text text-center"},"Cuando estés ubicado en el directorio, inicia el Servidor de PHP.",-1))),$a=pa((()=>(0,s._)("pre",{class:"language-php"},[(0,s.Uk)("                    "),(0,s._)("code",{class:"code"},"\n                        php -S 127.0.0.1:8080\n                    "),(0,s.Uk)("\n                ")],-1))),wa=[$a],Ca=pa((()=>(0,s._)("div",{class:"row mt-5"},[(0,s._)("h2",{class:"title"},[(0,s.Uk)("Api "),(0,s._)("i",{class:"fa-solid fa-circle-arrow-right"}),(0,s.Uk)(" MySql: Creación y "),(0,s._)("br"),(0,s.Uk)(" Configuración")]),(0,s._)("p",{class:"text"},[(0,s.Uk)(" En PhpMyAdmin podrás crear de manera fácil y práctica tu BD(Base de Datos) y tablas necesarias, sin embargo a continuación están los Query para que puedas crearlas. "),(0,s._)("br"),(0,s.Uk)(" Recuerda, en bdname puede ser el nombre de tu elección, recuerda las buenas prácticas para nombrarlas. ")])],-1))),ya={class:"row mt-5"},Aa=pa((()=>(0,s._)("p",{class:"text text-center"},"Crear BD",-1))),Da=pa((()=>(0,s._)("pre",{class:"language-sql"},[(0,s.Uk)("                    "),(0,s._)("code",{class:"code"},"\n                        CREATE DATABASE bdname;\n                    "),(0,s.Uk)("\n                ")],-1))),Ea=[Da],xa={class:"row mt-5"},ka=pa((()=>(0,s._)("p",{class:"text text-center"},"Consultar BD actuales",-1))),Pa=pa((()=>(0,s._)("pre",{class:"language-sql"},[(0,s.Uk)("                    "),(0,s._)("code",{class:"code"},"\n                        SHOW DATABASES;\n                    "),(0,s.Uk)("\n                ")],-1))),Ua=[Pa],Ta={class:"row mt-5"},Oa=pa((()=>(0,s._)("p",{class:"text text-center"},"Usar la BD",-1))),Sa=pa((()=>(0,s._)("pre",{class:"language-sql"},[(0,s.Uk)("                    "),(0,s._)("code",{class:"code"},"\n                        USE bdname;\n                    "),(0,s.Uk)("\n                ")],-1))),ja=[Sa],La={class:"row mt-5"},qa=pa((()=>(0,s._)("p",{class:"text text-center"},'Crear Tabla "Empleados"',-1))),Ma=pa((()=>(0,s._)("pre",{class:"language-sql"},[(0,s.Uk)("                    "),(0,s._)("code",{class:"code"},"\n                        CREATE TABLE IF NOT EXISTS empleado (\n                            id INT(11) NOT NULL AUTO_INCREMENT,\n                            nombre VARCHAR(256) NOT NULL,\n                            apellido VARCHAR(256) NOT NULL,\n                            correo VARCHAR(256) NOT NULL,\n                            PRIMARY KEY (id),\n                        );\n                    "),(0,s.Uk)("\n                ")],-1))),Ra=[Ma],Ha={class:"row mt-5"},Ia=(0,s.uE)('<h2 class="title" data-v-76240b2d>Api <i class="fa-solid fa-circle-arrow-right" data-v-76240b2d></i> Crear Conexión a <br data-v-76240b2d> BD</h2><div class="col" data-v-76240b2d><p class="text" data-v-76240b2d>Vamos a conectarnos a nuestra BD con PHP y PDO (PHP Data Objects). Dentro de la carpeta Config, crearemos el archivo <span class="fw-bold" data-v-76240b2d>database.php</span> y escribiremos el siguiente código.</p></div>',2),za={class:"col"},Ba=pa((()=>(0,s._)("pre",{class:"language-php"},[(0,s.Uk)("                    "),(0,s._)("code",{class:"code"},'\n                        class Database\n                        {\n\n                            private $host = "127.0.0.1"; //Host BD\n                            private $database_name = "crudphp"; //Nombre Base de Datos\n                            private $username = "root"; //Usuario\n                            private $password = ""; //Contraseña - Si tenemos asignada escribirla\n\n                            public $conn;\n\n                            //Función para conectarnos con la BD\n                            public function getConnection()\n                            {\n                                $this->conn = null;\n\n                                try {\n                                    $this->conn = new PDO("mysql:host=" . $this->host . ";dbname=" . $this->database_name, $this->username, $this->password);\n                                    $this->conn->exec("set names utf8");\n                                } catch (PDOException $exception) {\n                                    echo "Ups! Hay un problema: " . $exception->getMessage();\n                                }\n\n                                return $this->conn;\n                            }\n                        }\n                    '),(0,s.Uk)("\n                ")],-1))),Na=[Ba],Va={class:"row mt-5"},Fa=(0,s.uE)('<h2 class="title" data-v-76240b2d>Api <i class="fa-solid fa-circle-arrow-right" data-v-76240b2d></i> Crear <br data-v-76240b2d> Clase</h2><div class="col" data-v-76240b2d><p class="text" data-v-76240b2d>Crearemos la clase Empleados. Esto es importante ya que en POO (Programación Orientada a Objetos) nos servirá para encapsular los valores de nuestra BD y en ella definiremos los métodos para nuestro CRUD.</p><p class="text" data-v-76240b2d>A través de nuestra clase constructor obtendremos las propiedades de nuestra Tabla por medio de las clase de Conexión. <br data-v-76240b2d> Crear en la carpeta Class el archivo <span class="fw-bold" data-v-76240b2d>empleados.php</span>.</p></div>',2),Qa={class:"col"},Za=pa((()=>(0,s._)("pre",{class:"language-php"},[(0,s.Uk)("                    "),(0,s._)("code",{class:"code"},'\n\n                        class Empleados\n                        {\n                            //Variable Conexión\n                            private $conn;\n\n                            //Nombre de la tabla\n                            private $tabla_bd = "empleados";\n\n                            //Columnas de la tabla\n                            public $id;\n                            public $nombre;\n                            public $apellido;\n                            public $correo;\n\n                            //Conexión a BD\n                            public function __construct($db)\n                            {\n                                $this->conn = $db;\n                            }\n\n                            //Operaciones CRUD (Create, Read, Update, Delete)\n\n                            //Obtener todos los registros\n                            public function obtenerTodos()\n                            {\n                                $sqlQuery = "SELECT id, nombre, apellido, correo FROM " . $this->tabla_bd . "";\n                                $stmt = $this->conn->prepare($sqlQuery);\n                                $stmt->execute();\n                                return $stmt;\n                            }\n\n                            //Obtener un solo registro\n                            public function obtenerUno()\n                            {\n                                $sqlQuery = "SELECT * FROM " . $this->tabla_bd . " WHERE id=? LIMIT 0,1";\n\n                                $stmt = $this->conn->prepare($sqlQuery);\n\n                                //Bind - Enlazar Variables\n                                $stmt->bindParam(1, $this->id);\n\n                                $stmt->execute();\n\n                                $filaDato = $stmt->fetch(PDO::FETCH_ASSOC);\n\n                                //Relación de datos a variables\n                                $this->nombre = $filaDato[\'nombre\'];\n                                $this->apellido = $filaDato[\'apellido\'];\n                                $this->correo = $filaDato[\'correo\'];\n                            }\n\n                            //Crear\n                            public function crear()\n                            {\n                                $sqlQuery = "INSERT INTO " . $this->tabla_bd . "\n                                SET nombre=:nombre,\n                                apellido=:apellido,\n                                correo=:correo ";\n\n                                $stmt = $this->conn->prepare($sqlQuery);\n\n                                //Sanitización\n                                $this->nombre = htmlspecialchars(strip_tags($this->nombre));\n                                $this->apellido = htmlspecialchars(strip_tags($this->apellido));\n                                $this->correo = htmlspecialchars(strip_tags($this->correo));\n\n                                //Bind - Enlazar Variables\n                                $stmt->bindParam(":nombre", $this->nombre);\n                                $stmt->bindParam(":apellido", $this->apellido);\n                                $stmt->bindParam(":correo", $this->correo);\n\n                                if ($stmt->execute()) {\n                                    return true;\n                                }\n\n                                return false;\n                            }\n\n                            //Actualizar\n                            public function actualizar()\n                            {\n                                $sqlQuery = "UPDATE " . $this->tabla_bd . "\n                                SET nombre=:nombre,\n                                apellido=:apellido,\n                                correo=:correo\n                                WHERE id=:id";\n\n                                $stmt = $this->conn->prepare($sqlQuery);\n\n                                //Sanitización\n                                $this->nombre = htmlspecialchars(strip_tags($this->nombre));\n                                $this->apellido = htmlspecialchars(strip_tags($this->apellido));\n                                $this->correo = htmlspecialchars(strip_tags($this->correo));\n                                $this->id = htmlspecialchars(strip_tags($this->id));\n\n                                //Bind - Enlazar Variables\n                                $stmt->bindParam(\':nombre\', $this->nombre);\n                                $stmt->bindParam(\':apellido\', $this->apellido);\n                                $stmt->bindParam(\':correo\', $this->correo);\n                                $stmt->bindParam(\':id\', $this->id);\n\n                                if ($stmt->execute()) {\n                                    return true;\n                                }\n\n                                return false;\n                            }\n\n                            //Eliminar\n                            public function eliminar()\n                            {\n                                $sqlQuery = \'DELETE FROM \' . $this->tabla_bd . \' WHERE id=?\';\n\n                                $stmt = $this->conn->prepare($sqlQuery);\n\n                                //Sanitización\n                                $this->id = htmlspecialchars(strip_tags($this->id));\n\n                                //Bind - Enlazar Variables\n                                $stmt->bindParam(1, $this->id);\n\n                                if ($stmt->execute()) {\n                                    return true;\n                                }\n\n                                return false;\n                            }\n                        }\n\n                    '),(0,s.Uk)("\n                ")],-1))),Wa=[Za],Xa=(0,s.uE)('<p class="text" data-v-76240b2d>Los siguientes métodos gestionan el CRUD: <br data-v-76240b2d><i class="fa-solid fa-bullseye" data-v-76240b2d></i> __construct() - Alista la conexión. <br data-v-76240b2d><i class="fa-solid fa-bullseye" data-v-76240b2d></i> obtenerTodos() - Obtiene todos los registros. <br data-v-76240b2d><i class="fa-solid fa-bullseye" data-v-76240b2d></i> obtenerUno() - Obtiene un solo registro. <br data-v-76240b2d><i class="fa-solid fa-bullseye" data-v-76240b2d></i> crear() - Crea el registro. <br data-v-76240b2d><i class="fa-solid fa-bullseye" data-v-76240b2d></i> actualizar() - Actualiza el registro. <br data-v-76240b2d><i class="fa-solid fa-bullseye" data-v-76240b2d></i> eliminar() - Elimina un registro. </p>',1),Ya={class:"row mt-5"},Ga=(0,s.uE)('<h2 class="title" data-v-76240b2d>Api <i class="fa-solid fa-circle-arrow-right" data-v-76240b2d></i> Obtener todos los <br data-v-76240b2d> Datos</h2><div class="col" data-v-76240b2d><p class="text" data-v-76240b2d>El siguiente código recupera todos los registros de la tabla MySql. Dentro de la carpeta Api, crearemos el archivo <span class="fw-bold" data-v-76240b2d>leer_todos.php</span> y escribiremos el siguiente código.</p></div>',2),Ja={class:"col"},Ka=pa((()=>(0,s._)("pre",{class:"language-php"},[(0,s.Uk)("                    "),(0,s._)("code",{class:"code"},'\n\n                        header("Access-Control-Allow-Origin: *");\n                        header("Content-Type: application/json; charset=UTF-8");\n\n                        //Importamos la Conexión a la BD y la clase\n                        include_once \'../config/database.php\';\n                        include_once \'../class/empleados.php\';\n\n                        //Conexión a BD\n                        $database = new Database();\n                        $db = $database->getConnection();\n\n                        //Variables Datos\n                        $items = new Empleados($db);\n\n                        //Invocamos a la función\n                        $stmt = $items->obtenerTodos();\n                        $itemConteo = $stmt->rowCount();\n\n                        echo json_encode($itemConteo);\n\n                        if ($itemConteo > 0) {\n                            $empleadosLista = array();\n\n                            while ($row = $stmt->fetch(PDO::FETCH_ASSOC)) {\n                                extract($row);\n\n                                //Array para almacenar los datos del empleado\n                                $e = array(\n                                    "id" => $id,\n                                    "nombre" => $nombre,\n                                    "apellido" => $apellido,\n                                    "correo" => $correo\n                                );\n\n                                array_push($empleadosLista, $e);\n                            }\n\n                            echo json_encode($empleadosLista);\n                        } else {\n                            http_response_code(404);\n                            echo json_encode(\n                                array("msg" => "Oh no! No encontré registro")\n                            );\n                        }\n\n                    '),(0,s.Uk)("\n                ")],-1))),ae=[Ka],ee=(0,s.uE)('<div class="row mt-5" data-v-76240b2d><div class="col" data-v-76240b2d><p class="text" data-v-76240b2d>Yo estoy utilizando la Extensión de VS Code Thunder Client donde para conectarnos a nuestro Endpoint PHP, colocamos la URL donde esté ubicado nuestro archivo. Recuerda, como estamos obteniendo información, la petición HTTP debe ser de tipo GET.</p></div><div class="col" data-v-76240b2d><img src="'+ra+'" alt="LeerTodos" data-v-76240b2d></div></div>',1),ne={class:"row mt-5"},te=(0,s.uE)('<h2 class="title" data-v-76240b2d>Api <i class="fa-solid fa-circle-arrow-right" data-v-76240b2d></i> Obtener un solo <br data-v-76240b2d> Registro</h2><div class="col" data-v-76240b2d><p class="text" data-v-76240b2d>El siguiente código recupera un solo registro de la tabla MySql. Dentro de la carpeta Api, crearemos el archivo <span class="fw-bold" data-v-76240b2d>leer_uno.php</span> y escribiremos el siguiente código.</p></div>',2),se={class:"col"},oe=pa((()=>(0,s._)("pre",{class:"language-php"},[(0,s.Uk)("                    "),(0,s._)("code",{class:"code"},'\n\n                        header("Access-Control-Allow-Origin: *");\n                        header("Content-Type: application/json; charset=UTF-8");\n                        header("Access-Control-Allow-Methods: POST");\n                        header("Access-Control-Max-Age: 3600");\n                        header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");\n\n                        //Importamos la Conexión a la BD y la clase\n                        include_once \'../config/database.php\';\n                        include_once \'../class/empleados.php\';\n\n                        //Conexión a BD\n                        $database = new Database();\n                        $db = $database->getConnection();\n\n                        //Variables Datos\n                        $item = new Empleados($db);\n                        $item->id = isset($_GET[\'id\']) ? $_GET[\'id\'] : die();\n\n                        //Invocamos a la función\n                        $item->obtenerUno();\n\n                        if ($item->nombre != null) {\n                            //Array para almacenar los datos del empleado\n\n                            $empleadoDatos = array(\n                                "id" => $item->id,\n                                "nombre" => $item->nombre,\n                                "apellido" => $item->apellido,\n                                "correo" => $item->correo\n                            );\n\n                            http_response_code(200);\n                            echo json_encode($empleadoDatos);\n                        } else {\n                            http_response_code(404);\n                            echo json_encode(\n                                array("msg" => "Ups! Algo salió mal :(")\n                            );\n                        }\n\n\n                    '),(0,s.Uk)("\n                ")],-1))),re=[oe],ie=pa((()=>(0,s._)("div",{class:"row mt-5"},[(0,s._)("div",{class:"col"},[(0,s._)("img",{class:"centrar",src:ia,alt:"LeerUno"})])],-1))),le={class:"row mt-5"},ce=(0,s.uE)('<h2 class="title" data-v-76240b2d>Api <i class="fa-solid fa-circle-arrow-right" data-v-76240b2d></i> Crear un <br data-v-76240b2d> Registro</h2><div class="col" data-v-76240b2d><p class="text" data-v-76240b2d>El siguiente código crea un registro en la tabla MySql. Dentro de la carpeta Api, crearemos el archivo <span class="fw-bold" data-v-76240b2d>crear.php</span> y escribiremos el siguiente código.</p></div>',2),de={class:"col"},pe=pa((()=>(0,s._)("pre",{class:"language-php"},[(0,s.Uk)("                    "),(0,s._)("code",{class:"code"},'\n\n                        header("Access-Control-Allow-Origin: *");\n                        header("Content-Type: application/json; charset=UTF-8");\n                        header("Access-Control-Allow-Methods: POST");\n                        header("Access-Control-Max-Age: 3600");\n                        header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");\n\n                        //Importamos la Conexión a la BD y la clase\n                        include_once \'../config/database.php\';\n                        include_once \'../class/empleados.php\';\n\n                        //Conexión a BD\n                        $database = new Database();\n                        $db = $database->getConnection();\n\n                        //Variables Datos\n                        $item = new Empleados($db);\n                        $data = json_decode(file_get_contents("php://input"));\n\n                        //Asignación de valores\n                        $item->nombre = $data->nombre;\n                        $item->apellido = $data->apellido;\n                        $item->correo = $data->correo;\n\n                        if ($item->crear()) {\n                            echo  json_encode("Genial! Creado Exitosamente");\n                        } else {\n                            echo json_encode("Oh no! Algo salió mal :(");\n                        }\n\n                    '),(0,s.Uk)("\n                ")],-1))),ue=[pe],be=pa((()=>(0,s._)("div",{class:"row mt-5"},[(0,s._)("div",{class:"col"},[(0,s._)("img",{class:"centrar",src:la,alt:"LeerUno"})])],-1))),ve={class:"row mt-5"},me=(0,s.uE)('<h2 class="title" data-v-76240b2d>Api <i class="fa-solid fa-circle-arrow-right" data-v-76240b2d></i> Actualizar un <br data-v-76240b2d> Registro</h2><div class="col" data-v-76240b2d><p class="text" data-v-76240b2d>El siguiente código actualiza un registro en la tabla MySql. Dentro de la carpeta Api, crearemos el archivo <span class="fw-bold" data-v-76240b2d>actualizar.php</span> y escribiremos el siguiente código.</p></div>',2),he={class:"col"},fe=pa((()=>(0,s._)("pre",{class:"language-php"},[(0,s.Uk)("                    "),(0,s._)("code",{class:"code"},'\n\n                        header("Access-Control-Allow-Origin: *");\n                        header("Content-Type: application/json; charset=UTF-8");\n                        header("Access-Control-Allow-Methods: POST");\n                        header("Access-Control-Max-Age: 3600");\n                        header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");\n\n                        //Importamos la Conexión a la BD y la clase\n                        include_once \'../config/database.php\';\n                        include_once \'../class/empleados.php\';\n\n                        //Conexión a BD\n                        $database = new Database();\n                        $db = $database->getConnection();\n\n                        //Variable Datos\n                        $item = new Empleados($db);\n                        $data = json_decode(file_get_contents("php://input"));\n\n                        //Asignación de Variables\n                        $item->id = $data->id;\n                        $item->nombre = $data->nombre;\n                        $item->apellido = $data->apellido;\n                        $item->correo = $data->correo;\n\n                        if ($item->actualizar()) {\n                            echo json_encode("Super! Actualizado Correctamente");\n                        } else {\n                            echo json_encode("Oh no! Algo salió mal :(");\n                        }\n\n                    '),(0,s.Uk)("\n                ")],-1))),ge=[fe],_e=pa((()=>(0,s._)("div",{class:"row mt-5"},[(0,s._)("div",{class:"col"},[(0,s._)("img",{class:"centrar",src:ca,alt:"LeerUno"})])],-1))),$e={class:"row mt-5 mb-5"},we=(0,s.uE)('<h2 class="title" data-v-76240b2d>Api <i class="fa-solid fa-circle-arrow-right" data-v-76240b2d></i> Eliminar un <br data-v-76240b2d> Registro</h2><div class="col" data-v-76240b2d><p class="text" data-v-76240b2d>El siguiente código elimina un registro en la tabla MySql. Dentro de la carpeta Api, crearemos el archivo <span class="fw-bold" data-v-76240b2d>eliminar.php</span> y escribiremos el siguiente código.</p></div>',2),Ce={class:"col"},ye=pa((()=>(0,s._)("pre",{class:"language-php"},[(0,s.Uk)("                    "),(0,s._)("code",{class:"code"},'\n\n                        header("Access-Control-Allow-Origin: *");\n                        header("Content-Type: application/json; charset=UTF-8");\n                        header("Access-Control-Allow-Methods: POST");\n                        header("Access-Control-Max-Age: 3600");\n                        header("Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With");\n\n                        //Importamos la Conexión a la BD y la clase\n                        include_once \'../config/database.php\';\n                        include_once \'../class/empleados.php\';\n\n                        //Conexión a la BD\n                        $database = new Database();\n                        $db = $database->getConnection();\n\n                        //Variable Datos\n                        $item = new Empleados($db);\n                        $data = json_decode(file_get_contents("php://input"));\n\n                        //Asignación de Variables\n                        $item->id = $data->id;\n\n                        if ($item->eliminar()) {\n                            echo json_encode("Vale!, Dato Eliminado");\n                        } else {\n                            echo json_encode("Oh no! Algo salió mal");\n                        }\n\n                    '),(0,s.Uk)("\n                ")],-1))),Ae=[ye],De=pa((()=>(0,s._)("div",{class:"row mt-5"},[(0,s._)("div",{class:"col"},[(0,s._)("img",{class:"centrar",src:da,alt:"LeerUno"})])],-1)));function Ee(a,e){const n=(0,s.Q2)("highlight");return(0,s.wg)(),(0,s.iD)("div",ua,[ba,(0,s._)("div",va,[ma,(0,s.wy)(((0,s.wg)(),(0,s.iD)("div",null,fa)),[[n]])]),(0,s._)("div",ga,[_a,(0,s.wy)(((0,s.wg)(),(0,s.iD)("div",null,wa)),[[n]])]),Ca,(0,s._)("div",ya,[Aa,(0,s.wy)(((0,s.wg)(),(0,s.iD)("div",null,Ea)),[[n]])]),(0,s._)("div",xa,[ka,(0,s.wy)(((0,s.wg)(),(0,s.iD)("div",null,Ua)),[[n]])]),(0,s._)("div",Ta,[Oa,(0,s.wy)(((0,s.wg)(),(0,s.iD)("div",null,ja)),[[n]])]),(0,s._)("div",La,[qa,(0,s.wy)(((0,s.wg)(),(0,s.iD)("div",null,Ra)),[[n]])]),(0,s._)("div",Ha,[Ia,(0,s._)("div",za,[(0,s.wy)(((0,s.wg)(),(0,s.iD)("div",null,Na)),[[n]])])]),(0,s._)("div",Va,[Fa,(0,s._)("div",Qa,[(0,s.wy)(((0,s.wg)(),(0,s.iD)("div",null,Wa)),[[n]]),Xa])]),(0,s._)("div",Ya,[Ga,(0,s._)("div",Ja,[(0,s.wy)(((0,s.wg)(),(0,s.iD)("div",null,ae)),[[n]]),ee])]),(0,s._)("div",ne,[te,(0,s._)("div",se,[(0,s.wy)(((0,s.wg)(),(0,s.iD)("div",null,re)),[[n]]),ie])]),(0,s._)("div",le,[ce,(0,s._)("div",de,[(0,s.wy)(((0,s.wg)(),(0,s.iD)("div",null,ue)),[[n]]),be])]),(0,s._)("div",ve,[me,(0,s._)("div",he,[(0,s.wy)(((0,s.wg)(),(0,s.iD)("div",null,ge)),[[n]]),_e])]),(0,s._)("div",$e,[we,(0,s._)("div",Ce,[(0,s.wy)(((0,s.wg)(),(0,s.iD)("div",null,Ae)),[[n]]),De])])])}const xe={},ke=(0,r.Z)(xe,[["render",Ee],["__scopeId","data-v-76240b2d"]]);var Pe=ke,Ue={name:"Php",components:{PhpCrud:Pe},data(){return{solution:""}},methods:{switchSolution(a){this.solution=a}}};const Te=(0,r.Z)(Ue,[["render",oa],["__scopeId","data-v-ff922554"]]);var Oe=Te;const Se=a=>((0,s.dD)("data-v-2d0bd97a"),a=a(),(0,s.Cn)(),a),je={class:"row"},Le=Se((()=>(0,s._)("h1",{class:"title ms-5"},"Laravel",-1))),qe={class:"buttons ms-5"},Me=Se((()=>(0,s._)("i",{class:"fa-solid fa-pen-ruler me-3"},null,-1))),Re={class:"ms-5 mt-5"};function He(a,e,n,t,o,r){return(0,s.wg)(),(0,s.iD)("div",je,[Le,(0,s._)("div",qe,[(0,s._)("button",{onClick:e[0]||(e[0]=a=>r.switchSolution("LaravelCrud")),class:"btn btn-light"},[Me,(0,s.Uk)(" Crud")])]),(0,s._)("div",Re,[((0,s.wg)(),(0,s.j4)((0,s.LL)(o.solution)))])])}function Ie(a,e){return(0,s.wg)(),(0,s.iD)("h1",null,"Hi, I'm Laravel Crud")}const ze={},Be=(0,r.Z)(ze,[["render",Ie]]);var Ne=Be,Ve={name:"Php",components:{LaravelCrud:Ne},data(){return{solution:""}},methods:{switchSolution(a){this.solution=a}}};const Fe=(0,r.Z)(Ve,[["render",He],["__scopeId","data-v-2d0bd97a"]]);var Qe=Fe;const Ze=a=>((0,s.dD)("data-v-2920c048"),a=a(),(0,s.Cn)(),a),We={class:"row"},Xe=Ze((()=>(0,s._)("h1",{class:"title ms-5"},"Python",-1))),Ye={class:"buttons ms-5"},Ge=Ze((()=>(0,s._)("i",{class:"fa-solid fa-pen-ruler me-3"},null,-1))),Je={class:"ms-5 mt-5"};function Ke(a,e,n,t,o,r){return(0,s.wg)(),(0,s.iD)("div",We,[Xe,(0,s._)("div",Ye,[(0,s._)("button",{onClick:e[0]||(e[0]=a=>r.switchSolution("PythonCrud")),class:"btn btn-light"},[Ge,(0,s.Uk)(" Crud")])]),(0,s._)("div",Je,[((0,s.wg)(),(0,s.j4)((0,s.LL)(o.solution)))])])}function an(a,e){return(0,s.wg)(),(0,s.iD)("h1",null,"Hi, I'm Python Crud")}const en={},nn=(0,r.Z)(en,[["render",an]]);var tn=nn,sn={name:"Php",components:{PythonCrud:tn},data(){return{solution:""}},methods:{switchSolution(a){this.solution=a}}};const on=(0,r.Z)(sn,[["render",Ke],["__scopeId","data-v-2920c048"]]);var rn=on,ln={name:"HomeView",components:{Header:M,InitialVue:F,AboutMe:J,Php:Oe,Laravel:Qe,Python:rn},data(){return{actualComponent:F}},mounted(){const a=(0,s.f3)("emitter");a.on("switchComponent",(a=>{console.log(a),this.actualComponent=a}))}};const cn=(0,r.Z)(ln,[["render",v]]);var dn=cn;const pn=[{path:"/",name:"home",component:dn},{path:"/about",name:"about",component:()=>n.e(443).then(n.bind(n,381))}],un=(0,p.p7)({history:(0,p.PO)("/vuety/"),routes:pn});var bn=un,vn=n(391),mn=n(734),hn=n.n(mn),fn=n(896);const gn=(0,vn.Z)();(0,t.ri)(c).provide("emitter",gn).use(fn.Z).use(bn).use(hn()).mount("#app")}},e={};function n(t){var s=e[t];if(void 0!==s)return s.exports;var o=e[t]={id:t,loaded:!1,exports:{}};return a[t].call(o.exports,o,o.exports,n),o.loaded=!0,o.exports}n.m=a,function(){var a=[];n.O=function(e,t,s,o){if(!t){var r=1/0;for(d=0;d<a.length;d++){t=a[d][0],s=a[d][1],o=a[d][2];for(var i=!0,l=0;l<t.length;l++)(!1&o||r>=o)&&Object.keys(n.O).every((function(a){return n.O[a](t[l])}))?t.splice(l--,1):(i=!1,o<r&&(r=o));if(i){a.splice(d--,1);var c=s();void 0!==c&&(e=c)}}return e}o=o||0;for(var d=a.length;d>0&&a[d-1][2]>o;d--)a[d]=a[d-1];a[d]=[t,s,o]}}(),function(){n.n=function(a){var e=a&&a.__esModule?function(){return a["default"]}:function(){return a};return n.d(e,{a:e}),e}}(),function(){n.d=function(a,e){for(var t in e)n.o(e,t)&&!n.o(a,t)&&Object.defineProperty(a,t,{enumerable:!0,get:e[t]})}}(),function(){n.f={},n.e=function(a){return Promise.all(Object.keys(n.f).reduce((function(e,t){return n.f[t](a,e),e}),[]))}}(),function(){n.u=function(a){return"js/about.6f651a41.js"}}(),function(){n.miniCssF=function(a){}}(),function(){n.g=function(){if("object"===typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(a){if("object"===typeof window)return window}}()}(),function(){n.hmd=function(a){return a=Object.create(a),a.children||(a.children=[]),Object.defineProperty(a,"exports",{enumerable:!0,set:function(){throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+a.id)}}),a}}(),function(){n.o=function(a,e){return Object.prototype.hasOwnProperty.call(a,e)}}(),function(){var a={},e="portfolio:";n.l=function(t,s,o,r){if(a[t])a[t].push(s);else{var i,l;if(void 0!==o)for(var c=document.getElementsByTagName("script"),d=0;d<c.length;d++){var p=c[d];if(p.getAttribute("src")==t||p.getAttribute("data-webpack")==e+o){i=p;break}}i||(l=!0,i=document.createElement("script"),i.charset="utf-8",i.timeout=120,n.nc&&i.setAttribute("nonce",n.nc),i.setAttribute("data-webpack",e+o),i.src=t),a[t]=[s];var u=function(e,n){i.onerror=i.onload=null,clearTimeout(b);var s=a[t];if(delete a[t],i.parentNode&&i.parentNode.removeChild(i),s&&s.forEach((function(a){return a(n)})),e)return e(n)},b=setTimeout(u.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=u.bind(null,i.onerror),i.onload=u.bind(null,i.onload),l&&document.head.appendChild(i)}}}(),function(){n.r=function(a){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})}}(),function(){n.p="/vuety/"}(),function(){var a={143:0};n.f.j=function(e,t){var s=n.o(a,e)?a[e]:void 0;if(0!==s)if(s)t.push(s[2]);else{var o=new Promise((function(n,t){s=a[e]=[n,t]}));t.push(s[2]=o);var r=n.p+n.u(e),i=new Error,l=function(t){if(n.o(a,e)&&(s=a[e],0!==s&&(a[e]=void 0),s)){var o=t&&("load"===t.type?"missing":t.type),r=t&&t.target&&t.target.src;i.message="Loading chunk "+e+" failed.\n("+o+": "+r+")",i.name="ChunkLoadError",i.type=o,i.request=r,s[1](i)}};n.l(r,l,"chunk-"+e,e)}},n.O.j=function(e){return 0===a[e]};var e=function(e,t){var s,o,r=t[0],i=t[1],l=t[2],c=0;if(r.some((function(e){return 0!==a[e]}))){for(s in i)n.o(i,s)&&(n.m[s]=i[s]);if(l)var d=l(n)}for(e&&e(t);c<r.length;c++)o=r[c],n.o(a,o)&&a[o]&&a[o][0](),a[o]=0;return n.O(d)},t=self["webpackChunkportfolio"]=self["webpackChunkportfolio"]||[];t.forEach(e.bind(null,0)),t.push=e.bind(null,t.push.bind(t))}();var t=n.O(void 0,[998],(function(){return n(581)}));t=n.O(t)})();
//# sourceMappingURL=app.7dd6ceae.js.map